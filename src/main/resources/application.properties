server.port = 4567
spring.datasource.url=jdbc:postgresql://${DATABASE_HOST}/addressbook
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.database=POSTGRESQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.properties.spring.json.trusted.packages="com.example.demo.*"

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.bootstrap-servers=${KAFKA_URL}
spring.kafka.admin.modify-topic-configs=true

application.kafka.topic=${KAFKA_TOPIC}

#
#spring.jpa.generate-ddl=true
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true

